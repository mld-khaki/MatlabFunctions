function OutArr = MLD_LoadBigArray(ArrayName,LoadPath,AccountForFolder)
if ~exist('AccountForFolder','var')
	AccountForFolder = true;
end
OutArr = [];
% fprintf('\nArray%u, %s , %s',AccountForFolder,LoadPath,ArrayName);

if AccountForFolder == true
	FolderPath = [LoadPath '\' ArrayName '.MldMatSav'];
else
	FolderPath = [LoadPath];
end
if ~exist(FolderPath,'dir')
	error('Folder <%s> does not exist',FolderPath);
end

FileNumber = 1;
while(1)
	FileName = sprintf('%s_Chunk%03u',ArrayName,FileNumber);
% 	if exist([FolderPath '\' FileName '_D0.mat'],'file')
	if exist([FolderPath '\' FileName '.mat'],'file')
% 		FileName = [FileName '_D0.mat'];
		FileName = [FileName '.mat'];
		FlatterMatrix = 0;	% Higher Column count matrix
% 	elseif exist([FolderPath '\' FileName '_D1.mat'],'file')
	elseif exist([FolderPath '\' FileName '.mat'],'file')
% 		FileName = [FileName '_D1.mat'];
		FileName = [FileName '.mat'];
		FlatterMatrix = 1;  % Higher row count matrix
	else
		FlatterMatrix = -1; % No such file
	end
	
	
	if FlatterMatrix >= 0
		fprintf('\n\tLoading file %s...',FileName);
		Data = load([FolderPath '\' FileName]);
		Data = Data.Data;
	else
		break;
	end 
	if FileNumber == 1
		OutArr = Data;
	else
		if FlatterMatrix == 1
			OutArr(end+1:end+length(Data),:) = Data;
		elseif FlatterMatrix == 0
			OutArr(:,end+1:end+length(Data)) = Data;
		else
			error('We should not get to here!');
		end
	end
	
	FileNumber = FileNumber + 1;
end
end
